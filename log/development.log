

Started GET "/" for ::1 at 2016-01-14 16:40:54 -0500

ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

	bin/rake db:migrate RAILS_ENV=development

):
  activerecord (4.2.5) lib/active_record/migration.rb:392:in `check_pending!'
  activerecord (4.2.5) lib/active_record/migration.rb:373:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
  activesupport (4.2.5) lib/active_support/callbacks.rb:88:in `__run_callbacks__'
  activesupport (4.2.5) lib/active_support/callbacks.rb:778:in `_run_call_callbacks'
  activesupport (4.2.5) lib/active_support/callbacks.rb:81:in `run_callbacks'
  actionpack (4.2.5) lib/action_dispatch/middleware/callbacks.rb:27:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/reloader.rb:73:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/remote_ip.rb:78:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  web-console (2.2.1) lib/web_console/middleware.rb:39:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  railties (4.2.5) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.2.5) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.2.5) lib/rails/rack/logger.rb:20:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  rack (1.6.4) lib/rack/methodoverride.rb:22:in `call'
  rack (1.6.4) lib/rack/runtime.rb:18:in `call'
  activesupport (4.2.5) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
  rack (1.6.4) lib/rack/lock.rb:17:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/static.rb:116:in `call'
  rack (1.6.4) lib/rack/sendfile.rb:113:in `call'
  railties (4.2.5) lib/rails/engine.rb:518:in `call'
  railties (4.2.5) lib/rails/application.rb:165:in `call'
  rack (1.6.4) lib/rack/lock.rb:17:in `call'
  rack (1.6.4) lib/rack/content_length.rb:15:in `call'
  rack (1.6.4) lib/rack/handler/webrick.rb:88:in `service'
  /Users/iancandy/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/httpserver.rb:138:in `service'
  /Users/iancandy/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/httpserver.rb:94:in `run'
  /Users/iancandy/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/server.rb:294:in `block in start_thread'


  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_source.erb (4.0ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.4ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/diagnostics.html.erb within rescues/layout (72.8ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_markup.html.erb (0.6ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.6ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/console.js.erb within layouts/javascript (52.1ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/main.js.erb within layouts/javascript (0.6ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.4ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/index.html.erb (127.2ms)
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (1.8ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateUsers (20160114212908)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.5ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "username" varchar, "email" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114212908"]]
  [1m[35m (1.2ms)[0m  commit transaction
Migrating to CreatePosts (20160114213006)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.4ms)[0m  CREATE TABLE "posts" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "content" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114213006"]]
  [1m[35m (3.5ms)[0m  commit transaction
Migrating to CreateComments (20160114213039)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.4ms)[0m  CREATE TABLE "comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar, "user_id" integer, "post_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114213039"]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m


Started GET "/" for ::1 at 2016-01-14 16:41:55 -0500
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/railties-4.2.5/lib/rails/templates/rails/welcome/index.html.erb (2.8ms)
Completed 200 OK in 29ms (Views: 16.8ms | ActiveRecord: 0.0ms)


Started GET "/posts" for ::1 at 2016-01-14 16:42:01 -0500
Processing by PostsController#index as HTML
  [1m[35mPost Load (0.6ms)[0m  SELECT "posts".* FROM "posts"
  Rendered posts/index.html.erb within layouts/application (2.8ms)
Completed 200 OK in 1851ms (Views: 1843.3ms | ActiveRecord: 0.8ms)


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:42:03 -0500
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "users" ("username", "created_at", "updated_at") VALUES (?, ?, ?)  [["username", "ian"], ["created_at", "2016-01-14 21:46:11.293759"], ["updated_at", "2016-01-14 21:46:11.293759"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35mUser Load (0.4ms)[0m  SELECT  "users".* FROM "users"  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["title", "A Wonderful Tale"], ["content", "This is a great tale"], ["created_at", "2016-01-14 21:47:02.420863"], ["updated_at", "2016-01-14 21:47:02.420863"]]
  [1m[36m (0.8ms)[0m  [1mcommit transaction[0m
  [1m[35mComment Load (7.8ms)[0m  SELECT  "comments".* FROM "comments"  ORDER BY "comments"."id" ASC LIMIT 1
  [1m[36mPost Load (0.3ms)[0m  [1mSELECT "posts".* FROM "posts"[0m
  [1m[35mPost Load (0.3ms)[0m  SELECT  "posts".* FROM "posts"  ORDER BY "posts"."id" ASC LIMIT 1
  [1m[36mComment Load (0.2ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?[0m  [["post_id", 1]]
  [1m[35mPost Load (0.3ms)[0m  SELECT  "posts".* FROM "posts"  ORDER BY "posts"."id" ASC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "comments" ("user_id", "content", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["user_id", 1], ["content", "This was a pretty cool read!"], ["post_id", 1], ["created_at", "2016-01-14 21:48:30.051270"], ["updated_at", "2016-01-14 21:48:30.051270"]]
  [1m[35m (8.4ms)[0m  commit transaction
  [1m[36mPost Load (0.3ms)[0m  [1mSELECT  "posts".* FROM "posts"  ORDER BY "posts"."id" ASC LIMIT 1[0m
  [1m[35mComment Load (0.2ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT  "users".* FROM "users"  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mComment Load (0.3ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."user_id" = ?  [["user_id", 1]]


Started GET "/posts" for ::1 at 2016-01-14 16:49:55 -0500
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by PostsController#index as HTML
  [1m[35mPost Load (0.2ms)[0m  SELECT "posts".* FROM "posts"
  [1m[36mComment Load (0.3ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?[0m  [["post_id", 1]]
  [1m[35mUser Load (0.2ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  Rendered posts/index.html.erb within layouts/application (52.3ms)
Completed 200 OK in 346ms (Views: 325.0ms | ActiveRecord: 1.6ms)


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:49:55 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:49:56 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:49:56 -0500


Started GET "/posts" for ::1 at 2016-01-14 16:50:18 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1mSELECT "posts".* FROM "posts"[0m
  [1m[35mComment Load (0.2ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 1]]
  Rendered posts/index.html.erb within layouts/application (5.9ms)
Completed 200 OK in 37ms (Views: 35.1ms | ActiveRecord: 0.7ms)


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:50:18 -0500


Started GET "/posts" for ::1 at 2016-01-14 16:50:28 -0500
Processing by PostsController#index as HTML
  [1m[35mPost Load (0.2ms)[0m  SELECT "posts".* FROM "posts"
  [1m[36mComment Load (0.1ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?[0m  [["post_id", 1]]
  [1m[35mUser Load (0.1ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  Rendered posts/index.html.erb within layouts/application (5.4ms)
Completed 200 OK in 39ms (Views: 36.5ms | ActiveRecord: 0.5ms)


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:50:28 -0500


Started GET "/users/1" for ::1 at 2016-01-14 16:50:34 -0500
Processing by UsersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 1]]
  Rendered users/show.html.erb within layouts/application (1.6ms)
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.1ms)

SyntaxError (/Users/iancandy/development/curriculum/readmes/displaying-has-many-through-rails/app/views/users/show.html.erb:1: unterminated regexp meets end of file
/Users/iancandy/development/curriculum/readmes/displaying-has-many-through-rails/app/views/users/show.html.erb:1: syntax error, unexpected end-of-input, expecting keyword_end):
  app/views/users/show.html.erb:1: unterminated regexp meets end of file
  app/views/users/show.html.erb:1: syntax error, unexpected end-of-input, expecting keyword_end


  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_source.erb (6.8ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.9ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/diagnostics.html.erb within rescues/layout (59.9ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_markup.html.erb (0.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.6ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/console.js.erb within layouts/javascript (57.8ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/main.js.erb within layouts/javascript (0.3ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.7ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/index.html.erb (129.0ms)


Started GET "/users/1" for ::1 at 2016-01-14 16:50:55 -0500
Processing by UsersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[35mUser Load (0.1ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  [1m[36mPost Load (0.3ms)[0m  [1mSELECT "posts".* FROM "posts" INNER JOIN "comments" ON "posts"."id" = "comments"."post_id" WHERE "comments"."user_id" = ?[0m  [["user_id", 1]]
  Rendered users/show.html.erb within layouts/application (29.8ms)
Completed 200 OK in 52ms (Views: 50.4ms | ActiveRecord: 0.5ms)


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 16:50:55 -0500


Started GET "/posts/1" for ::1 at 2016-01-14 17:04:11 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[35mPost Load (0.1ms)[0m  SELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1  [["id", 1]]
  Rendered posts/show.html.erb within layouts/application (15.0ms)
Completed 500 Internal Server Error in 34ms (ActiveRecord: 1.0ms)

ActionView::Template::Error (undefined local variable or method `post' for #<#<Class:0x007f807f8d1f88>:0x007f807f8b2278>):
    1: <h2><%= post.title %></h2>
    2: <p>
    3:   Content: <%= post.content %>
    4: </p>
  app/views/posts/show.html.erb:1:in `_app_views_posts_show_html_erb___4217766273937227206_70094936180760'


  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_source.erb (10.1ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (4.1ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (68.7ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_markup.html.erb (0.5ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/console.js.erb within layouts/javascript (48.4ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/main.js.erb within layouts/javascript (0.4ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.4ms)
  Rendered /Users/iancandy/.rvm/gems/ruby-2.2.3/gems/web-console-2.2.1/lib/web_console/templates/index.html.erb (112.3ms)


Started GET "/posts/1" for ::1 at 2016-01-14 17:04:30 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mPost Load (0.1ms)[0m  [1mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1[0m  [["id", 1]]
  [1m[35mComment Load (0.2ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 1]]
  Rendered posts/show.html.erb within layouts/application (16.1ms)
Completed 200 OK in 52ms (Views: 49.5ms | ActiveRecord: 0.9ms)


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 17:04:30 -0500


Started GET "/users/1" for ::1 at 2016-01-14 17:04:32 -0500
Processing by UsersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[35mUser Load (0.1ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  [1m[36mPost Load (0.2ms)[0m  [1mSELECT "posts".* FROM "posts" INNER JOIN "comments" ON "posts"."id" = "comments"."post_id" WHERE "comments"."user_id" = ?[0m  [["user_id", 1]]
  Rendered users/show.html.erb within layouts/application (5.2ms)
Completed 200 OK in 29ms (Views: 27.1ms | ActiveRecord: 0.3ms)


Started GET "/users/1" for ::1 at 2016-01-14 17:09:27 -0500
Processing by UsersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[35mUser Load (0.1ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  [1m[36mPost Load (0.1ms)[0m  [1mSELECT "posts".* FROM "posts" INNER JOIN "comments" ON "posts"."id" = "comments"."post_id" WHERE "comments"."user_id" = ?[0m  [["user_id", 1]]
  Rendered users/show.html.erb within layouts/application (2.1ms)
Completed 200 OK in 41ms (Views: 39.4ms | ActiveRecord: 0.3ms)


Started GET "/assets/users.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/posts.self-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.css?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/jquery_ujs.self-d602bdfe68ffc63b9f9cc512872aa3cfff046228a0a36e90dd476e8ef54c1b09.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/jquery.self-c64a74367bda6ef8b860f19e74df08927ca99d2be2ac934e9e92d5fd361e0da4.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/application.self-e80e8f2318043e8af94dddc2adad5a4f09739a8ebb323b3ab31cd71d45fd9113.css?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/turbolinks.self-c37727e9bd6b2735da5c311aa83fead54ed0be6cc8bd9a65309e9c5abe2cbfff.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/posts.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/users.self-877aef30ae1b040ab8a3aba4e3e309a11d7f2612f44dde450b5c157aa5f95c05.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/assets/application.self-3b8dabdc891efe46b9a144b400ad69e37d7e5876bdc39dee783419a69d7ca819.js?body=1" for ::1 at 2016-01-14 17:09:28 -0500


Started GET "/posts/1" for ::1 at 2016-01-14 17:09:29 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[35mPost Load (0.1ms)[0m  SELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1  [["id", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?[0m  [["post_id", 1]]
  [1m[35mUser Load (0.2ms)[0m  SELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 1]]
  Rendered posts/show.html.erb within layouts/application (3.9ms)
Completed 200 OK in 33ms (Views: 31.0ms | ActiveRecord: 0.5ms)


Started GET "/users/1" for ::1 at 2016-01-14 17:09:30 -0500
Processing by UsersController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 1]]
  [1m[35mPost Load (0.1ms)[0m  SELECT "posts".* FROM "posts" INNER JOIN "comments" ON "posts"."id" = "comments"."post_id" WHERE "comments"."user_id" = ?  [["user_id", 1]]
  Rendered users/show.html.erb within layouts/application (2.1ms)
Completed 200 OK in 25ms (Views: 23.6ms | ActiveRecord: 0.2ms)


Started GET "/posts/1" for ::1 at 2016-01-14 17:09:31 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mPost Load (0.1ms)[0m  [1mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT 1[0m  [["id", 1]]
  [1m[35mComment Load (0.1ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 1]]
  Rendered posts/show.html.erb within layouts/application (1.7ms)
Completed 200 OK in 22ms (Views: 20.5ms | ActiveRecord: 0.3ms)
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160114212908)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
DEPRECATION WARNING: Directly inheriting from ActiveRecord::Migration is deprecated. Please specify the Rails release the migration was written for:

  class CreateUsers < ActiveRecord::Migration[4.2] (called from block in execute at /Users/gavrilchik/.rvm/rubies/ruby-2.6.1/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273)
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "username" varchar, "email" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114212908"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreatePosts (20160114213006)
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
DEPRECATION WARNING: Directly inheriting from ActiveRecord::Migration is deprecated. Please specify the Rails release the migration was written for:

  class CreatePosts < ActiveRecord::Migration[4.2] (called from block in execute at /Users/gavrilchik/.rvm/rubies/ruby-2.6.1/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273)
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TABLE "posts" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "content" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114213006"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateComments (20160114213039)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
DEPRECATION WARNING: Directly inheriting from ActiveRecord::Migration is deprecated. Please specify the Rails release the migration was written for:

  class CreateComments < ActiveRecord::Migration[4.2] (called from block in execute at /Users/gavrilchik/.rvm/rubies/ruby-2.6.1/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273)
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TABLE "comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar, "user_id" integer, "post_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160114213039"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2020-02-28 15:59:08.976990"], ["updated_at", "2020-02-28 15:59:08.976990"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mPost Load (0.6ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dora Veum"], ["email", "dora.veum@mcdermott.info"], ["created_at", "2020-02-28 15:59:56.702683"], ["updated_at", "2020-02-28 15:59:56.702683"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Kathline Lakin"], ["email", "lakin.kathline@yost.io"], ["created_at", "2020-02-28 15:59:56.706504"], ["updated_at", "2020-02-28 15:59:56.706504"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Billie Skiles"], ["email", "skiles.billie@thompsonabernathy.name"], ["created_at", "2020-02-28 15:59:56.710146"], ["updated_at", "2020-02-28 15:59:56.710146"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Santos Goldner Jr."], ["email", "jr.santos.goldner@leffler.info"], ["created_at", "2020-02-28 15:59:56.712471"], ["updated_at", "2020-02-28 15:59:56.712471"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Olympia Ebert"], ["email", "ebert.olympia@powlowski.co"], ["created_at", "2020-02-28 15:59:56.714159"], ["updated_at", "2020-02-28 15:59:56.714159"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Jamie Baumbach"], ["email", "baumbach.jamie@jastlittel.biz"], ["created_at", "2020-02-28 15:59:56.715923"], ["updated_at", "2020-02-28 15:59:56.715923"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Felix Spencer"], ["email", "spencer.felix@blanda.biz"], ["created_at", "2020-02-28 15:59:56.717576"], ["updated_at", "2020-02-28 15:59:56.717576"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Eldon Jacobson"], ["email", "jacobson.eldon@vandervort.co"], ["created_at", "2020-02-28 15:59:56.719437"], ["updated_at", "2020-02-28 15:59:56.719437"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Jeri Boyle"], ["email", "jeri.boyle@bogisich.com"], ["created_at", "2020-02-28 15:59:56.721432"], ["updated_at", "2020-02-28 15:59:56.721432"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dr. Marine Upton"], ["email", "upton.marine.dr@nicolas.net"], ["created_at", "2020-02-28 15:59:56.723061"], ["updated_at", "2020-02-28 15:59:56.723061"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 4]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 5]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 6]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 7]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 8]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 9]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 10]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dr. Erwin Pouros"], ["email", "pouros.dr.erwin@harveybergstrom.info"], ["created_at", "2020-02-28 16:00:12.603620"], ["updated_at", "2020-02-28 16:00:12.603620"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Mirian Schiller"], ["email", "schiller.mirian@kautzer.io"], ["created_at", "2020-02-28 16:00:12.605968"], ["updated_at", "2020-02-28 16:00:12.605968"]]
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Ms. Samira Beer"], ["email", "beer.ms.samira@kuhlman.biz"], ["created_at", "2020-02-28 16:00:12.607741"], ["updated_at", "2020-02-28 16:00:12.607741"]]
  [1m[35m (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Eric Beahan"], ["email", "eric.beahan@hickle.co"], ["created_at", "2020-02-28 16:00:12.609325"], ["updated_at", "2020-02-28 16:00:12.609325"]]
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Paulina Gerhold"], ["email", "gerhold.paulina@hamill.net"], ["created_at", "2020-02-28 16:00:12.610913"], ["updated_at", "2020-02-28 16:00:12.610913"]]
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Carson Smitham PhD"], ["email", "smitham.phd.carson@walker.info"], ["created_at", "2020-02-28 16:00:12.612414"], ["updated_at", "2020-02-28 16:00:12.612414"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Charlie Veum"], ["email", "veum.charlie@farrell.biz"], ["created_at", "2020-02-28 16:00:12.614086"], ["updated_at", "2020-02-28 16:00:12.614086"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Etta Doyle"], ["email", "doyle.etta@streichward.net"], ["created_at", "2020-02-28 16:00:12.615666"], ["updated_at", "2020-02-28 16:00:12.615666"]]
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Rodger Anderson"], ["email", "rodger.anderson@keeling.biz"], ["created_at", "2020-02-28 16:00:12.617209"], ["updated_at", "2020-02-28 16:00:12.617209"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dr. Ema Hegmann"], ["email", "dr.hegmann.ema@reingerritchie.biz"], ["created_at", "2020-02-28 16:00:12.618973"], ["updated_at", "2020-02-28 16:00:12.618973"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris can recite π. Backwards."], ["content", "There is nothing regular about Chuck Norris' expressions. Chuck Norris can binary search unsorted data. Chuck Norris doesn't use web standards as the web will conform to him. Chuck Norris doesn't have performance bottlenecks. He just makes the universe wait its turn. The programs that Chuck Norris writes don't have version numbers because he only writes them once. If a user reports a bug or has a feature request they don't live to see the sun set. Chuck Norris can't test for equality because he has no equal. All browsers support the hex definitions #chuck and #norris for the colors black and blue."], ["created_at", "2020-02-28 16:00:12.622903"], ["updated_at", "2020-02-28 16:00:12.622903"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "For Chuck Norris, NP-Hard = O(1)."], ["content", "When a bug sees Chuck Norris, it flees screaming in terror, and then immediately self-destructs to avoid being roundhouse-kicked. Chuck Norris can solve the Towers of Hanoi in one move. Chuck Norris doesn't need a java compiler, he goes straight to .war When a bug sees Chuck Norris, it flees screaming in terror, and then immediately self-destructs to avoid being roundhouse-kicked. Chuck Norris doesn't bug hunt, as that signifies a probability of failure. He goes bug killing. Chuck Norris finished World of Warcraft. Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris."], ["created_at", "2020-02-28 16:00:12.624668"], ["updated_at", "2020-02-28 16:00:12.624668"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "\"It works on my machine\" always holds true for Chuck Norris."], ["content", "Chuck Norris doesn't use a computer because a computer does everything slower than Chuck Norris. Chuck Norris' preferred IDE is hexedit. Chuck Norris' programs occupy 150% of CPU, even when they are not executing. Chuck Norris can spawn threads that complete before they are started. Chuck Norris doesn't believe in floating point numbers because they can't be typed on his binary keyboard. Chuck Norris doesn't pair program. Chuck Norris does not use revision control software. None of his code has ever needed revision."], ["created_at", "2020-02-28 16:00:12.626298"], ["updated_at", "2020-02-28 16:00:12.626298"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris is immutable. If something's going to change, it's going to have to be the rest of the universe."], ["content", "There is nothing regular about Chuck Norris' expressions. Chuck Norris can compile syntax errors. Whiteboards are white because Chuck Norris scared them that way. Chuck Norris's first program was kill -9. Chuck Norris' beard is immutable. Chuck Norris can use GOTO as much as he wants to. Telling him otherwise is considered harmful. When Chuck Norris points to null, null quakes in fear."], ["created_at", "2020-02-28 16:00:12.627936"], ["updated_at", "2020-02-28 16:00:12.627936"]]
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris's beard can type 140 wpm."], ["content", "Whiteboards are white because Chuck Norris scared them that way. Chuck Norris doesn't need to know about class factory pattern. He can instantiate interfaces. Chuck Norris' addition operator doesn't commute; it teleports to where he needs it to be. All arrays Chuck Norris declares are of infinite size, because Chuck Norris knows no bounds. Chuck Norris can access the DB from the UI. Chuck Norris finished World of Warcraft. Chuck Norris can compile syntax errors."], ["created_at", "2020-02-28 16:00:12.629313"], ["updated_at", "2020-02-28 16:00:12.629313"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 11]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 12]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 13]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 14]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 15]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 16]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 17]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 18]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 19]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 20]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = ?[0m  [["id", 1]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = ?[0m  [["id", 2]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = ?[0m  [["id", 4]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = ?[0m  [["id", 5]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Trisha Kulas"], ["email", "kulas.trisha@veum.co"], ["created_at", "2020-02-28 16:00:36.270853"], ["updated_at", "2020-02-28 16:00:36.270853"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Lavonna Bartell"], ["email", "lavonna.bartell@carroll.name"], ["created_at", "2020-02-28 16:00:36.275180"], ["updated_at", "2020-02-28 16:00:36.275180"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Merlin Johnston"], ["email", "johnston.merlin@rosenbaum.name"], ["created_at", "2020-02-28 16:00:36.278825"], ["updated_at", "2020-02-28 16:00:36.278825"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Chuck Grimes"], ["email", "chuck.grimes@yundt.org"], ["created_at", "2020-02-28 16:00:36.281530"], ["updated_at", "2020-02-28 16:00:36.281530"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Earnest Becker Sr."], ["email", "sr.earnest.becker@cronin.net"], ["created_at", "2020-02-28 16:00:36.284174"], ["updated_at", "2020-02-28 16:00:36.284174"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Tony Kuhn"], ["email", "kuhn.tony@kuhic.name"], ["created_at", "2020-02-28 16:00:36.286491"], ["updated_at", "2020-02-28 16:00:36.286491"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Jonna Ruecker"], ["email", "jonna.ruecker@bosco.co"], ["created_at", "2020-02-28 16:00:36.288904"], ["updated_at", "2020-02-28 16:00:36.288904"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dr. Quinton O'Kon"], ["email", "o.kon.dr.quinton@rowe.net"], ["created_at", "2020-02-28 16:00:36.290946"], ["updated_at", "2020-02-28 16:00:36.290946"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Dr. Byron Balistreri"], ["email", "balistreri.dr.byron@hammespacocha.co"], ["created_at", "2020-02-28 16:00:36.292918"], ["updated_at", "2020-02-28 16:00:36.292918"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["username", "Donnetta Moen"], ["email", "moen.donnetta@dibberttowne.info"], ["created_at", "2020-02-28 16:00:36.295256"], ["updated_at", "2020-02-28 16:00:36.295256"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "All arrays Chuck Norris declares are of infinite size, because Chuck Norris knows no bounds."], ["content", "Chuck Norris doesn't need an OS. Chuck Norris' protocol design method has no status, requests or responses, only commands. \"It works on my machine\" always holds true for Chuck Norris. Chuck Norris is immutable. If something's going to change, it's going to have to be the rest of the universe. You don't disable the Chuck Norris plug-in, it disables you. Chuck Norris' keyboard doesn't have a F1 key, the computer asks him for help. Chuck Norris doesn't use web standards as the web will conform to him."], ["created_at", "2020-02-28 16:00:36.297149"], ["updated_at", "2020-02-28 16:00:36.297149"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris can solve the Towers of Hanoi in one move."], ["content", "Chuck Norris can instantiate an abstract class. No statement can catch the ChuckNorrisException. You don't disable the Chuck Norris plug-in, it disables you. There is no need to try catching Chuck Norris' exceptions for recovery; every single throw he does is fatal. Chuck Norris can compile syntax errors. Chuck Norris knows the last digit of PI. Chuck Norris solved the Travelling Salesman problem in O(1) time."], ["created_at", "2020-02-28 16:00:36.298940"], ["updated_at", "2020-02-28 16:00:36.298940"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris' programs occupy 150% of CPU, even when they are not executing."], ["content", "Chuck Norris doesn't use a computer because a computer does everything slower than Chuck Norris. Chuck Norris's beard can type 140 wpm. Chuck Norris doesn't need a java compiler, he goes straight to .war \"It works on my machine\" always holds true for Chuck Norris. Chuck Norris can instantiate an abstract class. Chuck Norris breaks RSA 128-bit encrypted codes in milliseconds. Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris."], ["created_at", "2020-02-28 16:00:36.300506"], ["updated_at", "2020-02-28 16:00:36.300506"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris solved the Travelling Salesman problem in O(1) time."], ["content", "The programs that Chuck Norris writes don't have version numbers because he only writes them once. If a user reports a bug or has a feature request they don't live to see the sun set. Chuck Norris can use GOTO as much as he wants to. Telling him otherwise is considered harmful. Chuck Norris doesn't believe in floating point numbers because they can't be typed on his binary keyboard. Chuck Norris can access the DB from the UI. Chuck Norris writes code that optimizes itself. Chuck Norris never gets a syntax error. Instead, the language gets a DoesNotConformToChuck error. Chuck Norris doesn't use a computer because a computer does everything slower than Chuck Norris."], ["created_at", "2020-02-28 16:00:36.302194"], ["updated_at", "2020-02-28 16:00:36.302194"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "content", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["title", "Chuck Norris finished World of Warcraft."], ["content", "Chuck Norris can unit test an entire application with a single assert. Chuck Norris burst the dot com bubble. No statement can catch the ChuckNorrisException. Chuck Norris can divide by zero. Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris. Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris. Chuck Norris went out of an infinite loop."], ["created_at", "2020-02-28 16:00:36.303863"], ["updated_at", "2020-02-28 16:00:36.303863"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can write multi-threaded applications with a single thread."], ["user_id", 29], ["post_id", 10], ["created_at", "2020-02-28 16:00:36.309142"], ["updated_at", "2020-02-28 16:00:36.309142"]]
  [1m[35m (3.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris solved the Travelling Salesman problem in O(1) time."], ["user_id", 22], ["post_id", 8], ["created_at", "2020-02-28 16:00:36.314250"], ["updated_at", "2020-02-28 16:00:36.314250"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can recite π. Backwards."], ["user_id", 26], ["post_id", 6], ["created_at", "2020-02-28 16:00:36.316802"], ["updated_at", "2020-02-28 16:00:36.316802"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "The class object inherits from Chuck Norris."], ["user_id", 24], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.319040"], ["updated_at", "2020-02-28 16:00:36.319040"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris' keyboard doesn't have a F1 key, the computer asks him for help."], ["user_id", 29], ["post_id", 6], ["created_at", "2020-02-28 16:00:36.321233"], ["updated_at", "2020-02-28 16:00:36.321233"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris doesn't program with a keyboard. He stares the computer down until it does what he wants."], ["user_id", 29], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.323191"], ["updated_at", "2020-02-28 16:00:36.323191"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris programs do not accept input."], ["user_id", 28], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.325762"], ["updated_at", "2020-02-28 16:00:36.325762"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can write infinite recursion functions... and have them return."], ["user_id", 27], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.328188"], ["updated_at", "2020-02-28 16:00:36.328188"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris does not use exceptions when programming. He has not been able to identify any of his code that is not exceptional."], ["user_id", 23], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.330398"], ["updated_at", "2020-02-28 16:00:36.330398"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris does not use revision control software. None of his code has ever needed revision."], ["user_id", 26], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.332437"], ["updated_at", "2020-02-28 16:00:36.332437"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can recite π. Backwards."], ["user_id", 22], ["post_id", 10], ["created_at", "2020-02-28 16:00:36.334598"], ["updated_at", "2020-02-28 16:00:36.334598"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "There is no Esc key on Chuck Norris' keyboard, because no one escapes Chuck Norris."], ["user_id", 27], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.336652"], ["updated_at", "2020-02-28 16:00:36.336652"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris doesn't delete files, he blows them away."], ["user_id", 21], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.338885"], ["updated_at", "2020-02-28 16:00:36.338885"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can unit test an entire application with a single assert."], ["user_id", 26], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.340871"], ["updated_at", "2020-02-28 16:00:36.340871"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can write multi-threaded applications with a single thread."], ["user_id", 23], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.342908"], ["updated_at", "2020-02-28 16:00:36.342908"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can use GOTO as much as he wants to. Telling him otherwise is considered harmful."], ["user_id", 30], ["post_id", 8], ["created_at", "2020-02-28 16:00:36.344831"], ["updated_at", "2020-02-28 16:00:36.344831"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris finished World of Warcraft."], ["user_id", 24], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.347000"], ["updated_at", "2020-02-28 16:00:36.347000"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can solve the Towers of Hanoi in one move."], ["user_id", 21], ["post_id", 10], ["created_at", "2020-02-28 16:00:36.349343"], ["updated_at", "2020-02-28 16:00:36.349343"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "There is no Esc key on Chuck Norris' keyboard, because no one escapes Chuck Norris."], ["user_id", 29], ["post_id", 8], ["created_at", "2020-02-28 16:00:36.351423"], ["updated_at", "2020-02-28 16:00:36.351423"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris' beard is immutable."], ["user_id", 27], ["post_id", 6], ["created_at", "2020-02-28 16:00:36.353355"], ["updated_at", "2020-02-28 16:00:36.353355"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Project managers never ask Chuck Norris for estimations... ever."], ["user_id", 28], ["post_id", 9], ["created_at", "2020-02-28 16:00:36.355397"], ["updated_at", "2020-02-28 16:00:36.355397"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris doesn't use a computer because a computer does everything slower than Chuck Norris."], ["user_id", 27], ["post_id", 6], ["created_at", "2020-02-28 16:00:36.357367"], ["updated_at", "2020-02-28 16:00:36.357367"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris' keyboard doesn't have a F1 key, the computer asks him for help."], ["user_id", 21], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.359826"], ["updated_at", "2020-02-28 16:00:36.359826"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris can't test for equality because he has no equal."], ["user_id", 26], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.361956"], ["updated_at", "2020-02-28 16:00:36.361956"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "When Chuck Norris points to null, null quakes in fear."], ["user_id", 29], ["post_id", 10], ["created_at", "2020-02-28 16:00:36.363965"], ["updated_at", "2020-02-28 16:00:36.363965"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris' programs occupy 150% of CPU, even when they are not executing."], ["user_id", 25], ["post_id", 10], ["created_at", "2020-02-28 16:00:36.366008"], ["updated_at", "2020-02-28 16:00:36.366008"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "The only pattern Chuck Norris knows is God Object."], ["user_id", 21], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.368308"], ["updated_at", "2020-02-28 16:00:36.368308"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "When a bug sees Chuck Norris, it flees screaming in terror, and then immediately self-destructs to avoid being roundhouse-kicked."], ["user_id", 26], ["post_id", 8], ["created_at", "2020-02-28 16:00:36.370774"], ["updated_at", "2020-02-28 16:00:36.370774"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Whiteboards are white because Chuck Norris scared them that way."], ["user_id", 21], ["post_id", 8], ["created_at", "2020-02-28 16:00:36.372969"], ["updated_at", "2020-02-28 16:00:36.372969"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mPost Load (0.1ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "comments" ("content", "user_id", "post_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["content", "Chuck Norris doesn't need a java compiler, he goes straight to .war"], ["user_id", 28], ["post_id", 7], ["created_at", "2020-02-28 16:00:36.375219"], ["updated_at", "2020-02-28 16:00:36.375219"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mComment Load (1.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments"[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
Started GET "/" for ::1 at 2020-02-28 10:04:28 -0600
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Parameters: {"internal"=>true}
  Rendering /Users/gavrilchik/.rvm/gems/ruby-2.6.1/gems/railties-5.0.7.1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/gavrilchik/.rvm/gems/ruby-2.6.1/gems/railties-5.0.7.1/lib/rails/templates/rails/welcome/index.html.erb (3.1ms)
Completed 200 OK in 14ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/posts" for ::1 at 2020-02-28 10:04:34 -0600
Processing by PostsController#index as HTML
  Rendering posts/index.html.erb within layouts/application
  [1m[36mPost Load (1.0ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
  Rendered posts/index.html.erb within layouts/application (11.8ms)
Completed 200 OK in 666ms (Views: 658.1ms | ActiveRecord: 1.5ms)


Started GET "/posts/8" for ::1 at 2020-02-28 10:04:54 -0600
Processing by PostsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mPost Load (0.6ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  Rendering posts/show.html.erb within layouts/application
  [1m[36mComment Load (0.5ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?[0m  [["post_id", 8]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 22], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 30], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 29], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 26], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 21], ["LIMIT", 1]]
  Rendered posts/show.html.erb within layouts/application (42.4ms)
Completed 200 OK in 60ms (Views: 51.9ms | ActiveRecord: 2.8ms)


Started GET "/users/22" for ::1 at 2020-02-28 10:04:59 -0600
Processing by UsersController#show as HTML
  Parameters: {"id"=>"22"}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 22], ["LIMIT", 1]]
  Rendering users/show.html.erb within layouts/application
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts" INNER JOIN "comments" ON "posts"."id" = "comments"."post_id" WHERE "comments"."user_id" = ?[0m  [["user_id", 22]]
  Rendered users/show.html.erb within layouts/application (13.1ms)
Completed 200 OK in 33ms (Views: 27.7ms | ActiveRecord: 0.6ms)


